#!/usr/bin/env node

/**
 * Export clean JSON framework structure without console output
 */

import { generateFrameworkStructure, frameworkToJSON } from './lib';
import * as fs from 'fs';

// Framework data from the problem statement
const o_org_text = `
CA-O-001-GOVERNANCE
CI-CA-O-001-001-PROGRAM-GOVERNANCE-FRAMEWORK
CI-CA-O-001-002-QUALITY-MANAGEMENT-SYSTEM
CI-CA-O-001-003-CERTIFICATION-ROADMAP
CA-O-002-FINANCIAL-CONTROL
CI-CA-O-002-001-BUDGET-TRACKING
CI-CA-O-002-002-LIFECYCLE-COST-MODEL
CI-CA-O-002-003-FUNDING-STRATEGY
CA-O-003-KPI-MONITORING
CI-CA-O-003-001-PERFORMANCE-INDICATORS
CI-CA-O-003-002-RISK-DASHBOARD
CI-CA-O-003-003-TRACEABILITY-METRICS
CA-O-004-ORGANIZATIONAL-STRUCTURE
CI-CA-O-004-001-ORG-CHART
CI-CA-O-004-002-ROLES-RESPONSIBILITIES
CI-CA-O-004-003-DECISION-RIGHTS
CA-O-005-STEERING-COMMITTEES
CI-CA-O-005-001-TECHNICAL-BOARD
CI-CA-O-005-002-SAFETY-BOARD
CI-CA-O-005-003-CERTIFICATION-BOARD
CA-O-006-STRATEGIC-ALIGNMENT
CI-CA-O-006-001-VISION-MISSION
CI-CA-O-006-002-STRATEGIC-OBJECTIVES
CI-CA-O-006-003-ROADMAP-MILESTONES
`.trim();

const p_proc_text = `
CA-P-001-PROCESS-ARCHITECTURE
CI-CA-P-001-001-PROCESS-CATALOG
CI-CA-P-001-002-BPMN-META-MODEL
CI-CA-P-001-003-LIFECYCLE-MAP
CI-CA-P-001-004-RACI-MATRIX
CA-P-002-GATES-AND-REVIEWS
CI-CA-P-002-001-SRR-GATE
CI-CA-P-002-002-PDR-GATE
CI-CA-P-002-003-CDR-GATE
CI-CA-P-002-004-TRR-GATE
CI-CA-P-002-005-FRR-ORR-GATES
CA-P-003-CHANGE-MANAGEMENT
CI-CA-P-003-001-ECR-WORKFLOW
CI-CA-P-003-002-ECO-IMPLEMENTATION
CI-CA-P-003-003-CCB-CHARTER
CI-CA-P-003-004-DEVIATIONS-CONCESSIONS
CA-P-004-VV-PLANNING-AND-RTM
CI-CA-P-004-001-VV-PLAN
CI-CA-P-004-002-REQUIREMENTS-TRACEABILITY-RTM
CI-CA-P-004-003-TEST-READINESS-REVIEW
CI-CA-P-004-004-TEST-DATA-MANAGEMENT
CA-P-005-SAFETY-CERTIFICATION-PROCESSES
CI-CA-P-005-001-ARP4754A-PROCESS
CI-CA-P-005-002-ARP4761A-SAFETY-ASSESSMENT
CI-CA-P-005-003-DO178C-SOFTWARE-PROCESS
CI-CA-P-005-004-DO254-HARDWARE-PROCESS
CI-CA-P-005-005-DO326A-CYBERSECURITY-PROCESS
CI-CA-P-005-006-SAFETY-CASE-GSN-TEMPLATES
CA-P-006-QUALITY-NCR-CAPA
CI-CA-P-006-001-NCR-WORKFLOW
CI-CA-P-006-002-CAPA-PROCEDURE
CI-CA-P-006-003-FAI-FIRST-ARTICLE
CI-CA-P-006-004-AUDIT-PROGRAM
CA-P-007-SUPPLIER-AND-PROCUREMENT
CI-CA-P-007-001-SUPPLIER-QUALIFICATION
CI-CA-P-007-002-SOW-TEMPLATES
CI-CA-P-007-003-INCOMING-INSPECTION
CI-CA-P-007-004-SLA-KPI-FRAMEWORK
CA-P-008-SECURITY-INCIDENT-RESPONSE
CI-CA-P-008-001-CSIRT-RUNBOOK
CI-CA-P-008-002-VULNERABILITY-MANAGEMENT
CI-CA-P-008-003-SBOM-POLICY
CI-CA-P-008-004-KEY-ROTATION-PROCEDURES
CA-P-009-DATA-GOVERNANCE-AND-DET
CI-CA-P-009-001-DATA-CLASSIFICATION
CI-CA-P-009-002-RETENTION-SCHEDULE
CI-CA-P-009-003-DET-EVIDENCE-PACKAGING
CI-CA-P-009-004-PRIVACY-IMPACT-ASSESSMENT
CA-P-010-CI-CD-AND-RELEASE
CI-CA-P-010-001-BRANCHING-MODEL
CI-CA-P-010-002-BUILD-PROMOTION-GATES
CI-CA-P-010-003-RELEASE-CUTOVER
CI-CA-P-010-004-ROLLBACK-PLAYBOOK
CA-P-011-TRAINING-AND-COMPETENCE
CI-CA-P-011-001-COMPETENCY-MATRIX
CI-CA-P-011-002-TRAINING-CURRICULUM
CI-CA-P-011-003-AUTHORIZATION-TO-WORK
CA-P-012-MRO-EOL-PROCEDURES
CI-CA-P-012-001-MRO-WORKPACK-GENERATION
CI-CA-P-012-002-EOL-SORTING-AND-RECOVERY
CI-CA-P-012-003-HAZMAT-HANDLING
CA-P-013-ENERGY-AS-POLICY
CI-CA-P-013-001-EAP-BUDGETING
CI-CA-P-013-002-EAP-SCHEDULING-CONSTRAINTS
CI-CA-P-013-003-EAP-REPORTING
CA-P-014-RISK-MANAGEMENT
CI-CA-P-014-001-RISK-REGISTER
CI-CA-P-014-002-BOWTIE-ANALYSIS
CI-CA-P-014-003-MITIGATION-PLANS
CA-P-015-DOCUMENT-CONTROL
CI-CA-P-015-001-DOC-TEMPLATES
CI-CA-P-015-002-APPROVAL-WORKFLOW
CI-CA-P-015-003-VERSIONING-GUIDE
CI-CA-P-015-004-DISTRIBUTION-LISTS
CA-P-016-OPERATIONS-HANDOVER
CI-CA-P-016-001-ORR-CHECKLIST
CI-CA-P-016-002-SERVICE-TRANSITION
CI-CA-P-016-003-OP-MANUAL-ACCEPTANCE
`.trim();

const ime_text = [
`I-INTELLIGENT
CA-I-001-AUTONOMY-LAYERING-ARCH
CI-CA-I-001-001-AUTONOMY-LEVELS-STATE-MACHINE
CI-CA-I-001-002-CREW/AUTOMATION-ARBITRATION
CI-CA-I-001-003-HAZARD-MAP-(ARP4761)
CI-CA-I-001-004-POLICY-HIERARCHY-(AMORES/SEAL)
CI-CA-I-001-005-DEGRADATION-MODES-(FAIL-OP/SAFE)
CA-I-002-AGENT-MESH-(ExMCP)
CI-CA-I-002-001-SKILLS/TOOLS-REGISTRY
CI-CA-I-002-002-MEMORY-RAG-LIMITS-(PRIVACY)
CI-CA-I-002-003-NEGOTIATION/COORDINATION
CI-CA-I-002-004-HRI-PROMPTS-(COCKPIT/CABIN/CARGO)
CI-CA-I-002-005-DET-RATIONALES/WORM`,
`M-MACHINE
CA-M-001-AUTOMATION-JOBS/ETL
CI-CA-M-001-001-BATCH/STREAM-ENGINES
CI-CA-M-001-002-CANONICAL-SCHEMAS-(Protobuf)
CI-CA-M-001-003-QUALITY-GATES/RETRY
CI-CA-M-001-004-LEDGER-WRITE-(QAUDIT/DET)
CI-CA-M-001-005-ERROR-BUDGETS/SLO`,
`E-EXECUTING
CA-E-001-RUNTIME-MODES
CI-CA-E-001-001-MODE-MANAGER-(NORM/INHIBIT/EMERG)
CI-CA-E-001-002-AUTHZ/RBAC-BINDINGS
CI-CA-E-001-003-SAFE-STATE-TRANSITIONS
CI-CA-E-001-004-FLEET-POLICY-SYNC
CI-CA-E-001-005-READINESS-HEALTH-GATES`
];

const t_domains_text = [
`A-ARCHITECTURES_AIRFRAMES_AERODYNAMICS
CA-A-001-CENTER-BODY-BOX
CI-CA-A-001-001-CB-PRIMARY-GRID
CI-CA-A-001-002-CB-RIBS-BULKHEADS
CI-CA-A-001-003-CB-SKIN-PANELS
CI-CA-A-001-004-CB-LANDING-GEAR-REINFS
CI-CA-A-001-005-CB-PASSAGEWAYS`,
`M-MECHANICAL_AND_CONTROL
CA-M-001-FLIGHT-CONTROL-MECHANISMS
CI-CA-M-001-001-FC-ELEVON-HINGE-LINES
CI-CA-M-001-002-FC-FLAPERON-DRIVE-BOXES
CI-CA-M-001-003-FC-SPOILER-DRIVE-UNITS`,
`E1-ENVIRONMENTAL_REMEDIATION_CIRCULARITY
CA-E1-001-ECS-CABIN-AIR-SYSTEM
CI-CA-E1-001-001-ECS-HEAT-EXCHANGER-CORES
CI-CA-E1-001-002-ECS-MIX-MANIFOLD-DUCTS`,
`D-DEFENCE_CYBERSECURITY_SAFETY
CA-D-001-PLATFORM-SURVIVABILITY
CI-CA-D-001-001-EMI-EMC-HARDENING-GUIDES
CI-CA-D-001-002-LIGHTNING-LPS-INTERFACES`,
`E2-ENERGY_AND_RENEWABLE
CA-E2-001-POWER-ARCHITECTURE
CI-CA-E2-001-001-BUS-TOPOLOGIES-HVDC-MVDC-LVDC
CI-CA-E2-001-002-GALLEY-AND-SERVICE-BRANCHES`,
`O-OPERATING_SYSTEMS_NAVIGATION_HPC
CA-O-001-AQUA-OS-BRIDGE-CORE
CI-CA-O-001-001-CONTROL-PLANE-ARCH
CI-CA-O-001-002-PARTITION-MANAGER`
];

function main() {
  const framework = generateFrameworkStructure(
    o_org_text,
    p_proc_text,
    ime_text[0], // I-INTELLIGENT
    ime_text[1], // M-MACHINE
    ime_text[2], // E-EXECUTING
    t_domains_text,
    {
      includeFolders: true,
      includeDescriptions: true,
      maxDepth: 10
    }
  );
  
  const jsonOutput = frameworkToJSON(framework);
  
  // Write to file
  fs.writeFileSync('ampel360-framework-clean.json', jsonOutput);
  
  // Also output to stdout for pipe compatibility
  console.log(jsonOutput);
}

if (require.main === module) {
  main();
}